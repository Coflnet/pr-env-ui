// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { PostEnvironmentData, PostEnvironmentError, PostEnvironmentResponse, GetEnvironmentListData, GetEnvironmentListError, GetEnvironmentListResponse, DeleteEnvironmentByIdData, DeleteEnvironmentByIdError, DeleteEnvironmentByIdResponse, GetEnvironmentInstanceByIdListData, GetEnvironmentInstanceByIdListError, GetEnvironmentInstanceByIdListResponse, GetGithubRepositoriesData, GetGithubRepositoriesError, GetGithubRepositoriesResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Creates a new environment
 * Creates a new environment
 */
export const postEnvironment = <ThrowOnError extends boolean = false>(options: Options<PostEnvironmentData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostEnvironmentResponse, PostEnvironmentError, ThrowOnError>({
        ...options,
        url: '/environment'
    });
};

/**
 * List all available Environments
 * List of all environments the user has access to
 */
export const getEnvironmentList = <ThrowOnError extends boolean = false>(options: Options<GetEnvironmentListData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetEnvironmentListResponse, GetEnvironmentListError, ThrowOnError>({
        ...options,
        url: '/environment/list'
    });
};

/**
 * Deletes an environment
 * Deletes an environment based on the id
 */
export const deleteEnvironmentById = <ThrowOnError extends boolean = false>(options: Options<DeleteEnvironmentByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteEnvironmentByIdResponse, DeleteEnvironmentByIdError, ThrowOnError>({
        ...options,
        url: '/environment/{id}'
    });
};

/**
 * Lists all instances of an environment
 * Lists all instances of an environment by the environment id
 */
export const getEnvironmentInstanceByIdList = <ThrowOnError extends boolean = false>(options: Options<GetEnvironmentInstanceByIdListData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetEnvironmentInstanceByIdListResponse, GetEnvironmentInstanceByIdListError, ThrowOnError>({
        ...options,
        url: '/environment-instance/{id}/list'
    });
};

/**
 * Lists all the repositories of the authenticated user
 * Lists all the repositories of the authenticated user
 */
export const getGithubRepositories = <ThrowOnError extends boolean = false>(options: Options<GetGithubRepositoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetGithubRepositoriesResponse, GetGithubRepositoriesError, ThrowOnError>({
        ...options,
        url: '/github/repositories'
    });
};