// This file is auto-generated by @hey-api/openapi-ts

export const previewEnvironmentModelSchema = {
    type: 'object',
    required: ['applicationSettings', 'containerSettings', 'gitSettings', 'buildSettings', 'name', 'id'],
    properties: {
        applicationSettings: {
            '$ref': '#/components/schemas/applicationSettingsModel'
        },
        containerSettings: {
            '$ref': '#/components/schemas/containerSettingsModel'
        },
        gitSettings: {
            '$ref': '#/components/schemas/gitSettingsModel'
        },
        buildSettings: {
            '$ref': '#/components/schemas/buildSettings'
        },
        name: {
            type: 'string'
        },
        id: {
            type: 'string'
        }
    }
} as const;

export const applicationSettingsModelSchema = {
    type: 'object',
    required: ['port'],
    properties: {
        port: {
            type: 'integer'
        },
        environmentVariables: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/environmentVariableModel'
            }
        },
        command: {
            type: 'string'
        }
    }
} as const;

export const environmentVariableModelSchema = {
    type: 'object',
    required: ['key', 'value'],
    properties: {
        key: {
            type: 'string'
        },
        value: {
            type: 'string'
        }
    }
} as const;

export const containerSettingsModelSchema = {
    type: 'object',
    properties: {
        registry: {
            type: 'string'
        },
        repository: {
            type: 'string'
        }
    }
} as const;

export const gitSettingsModelSchema = {
    type: 'object',
    required: ['repository', 'organization'],
    properties: {
        repository: {
            type: 'string'
        },
        organization: {
            type: 'string'
        }
    }
} as const;

export const buildSettingsSchema = {
    type: 'object',
    required: ['buildAllPullRequests', 'buildAllBranches'],
    properties: {
        buildAllPullRequests: {
            type: 'boolean'
        },
        buildAllBranches: {
            type: 'boolean'
        },
        branchWildcard: {
            type: 'string'
        },
        dockerFilePath: {
            type: 'string'
        }
    }
} as const;

export const previewEnvironmentInstanceModelSchema = {
    type: 'object',
    required: ['name', 'desiredPhase', 'ownerId', 'previewEnvironmentId', 'instanceGitSettings', 'currentPhase'],
    properties: {
        name: {
            type: 'string'
        },
        desiredPhase: {
            type: 'string'
        },
        currentPhase: {
            type: 'string'
        },
        ownerId: {
            type: 'string'
        },
        previewEnvironmentId: {
            type: 'string'
        },
        instanceGitSettings: {
            '$ref': '#/components/schemas/instanceGitSettingsModel'
        },
        publicFacingUrl: {
            type: 'string'
        }
    }
} as const;

export const instanceGitSettingsModelSchema = {
    type: 'object',
    properties: {
        branch: {
            type: 'string'
        },
        commitHash: {
            type: 'string'
        },
        pullRequestIdentifier: {
            type: 'string'
        }
    }
} as const;

export const githubRepositoryModelSchema = {
    type: 'object',
    required: ['name', 'owner'],
    properties: {
        name: {
            type: 'string'
        },
        owner: {
            type: 'string'
        }
    }
} as const;

export const server_httpErrorSchema = {
    type: 'object',
    properties: {
        message: {
            type: 'object'
        }
    }
} as const;